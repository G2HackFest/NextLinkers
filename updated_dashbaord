<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Student Budget Companion</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      padding: 0;
      background: #f8fafc;
      color: #1e293b;
      display: flex;
      flex-direction: column;
      height: 100vh;
    }
    header {
      background-color: #1e3a8a;
      color: white;
      padding: 16px;
      text-align: center;
      font-size: 20px;
      font-weight: bold;
    }
    footer {
      background-color: #1e3a8a;
      color: white;
      padding: 12px;
      text-align: center;
      font-size: 14px;
    }
    .dashboard-container {
      flex: 1;
      display: flex;
      overflow: hidden;
    }
    .sidebar {
      width: 250px;
      background-color: #1e3a8a;
      color: white;
      padding: 20px;
      display: flex;
      flex-direction: column;
    }
    .sidebar h2 {
      text-align: center;
      font-size: 20px;
      margin-bottom: 30px;
    }
    .nav-link {
      background-color: #334155;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 8px;
      cursor: pointer;
      text-align: center;
    }
    .nav-link:hover {
      background-color: #60a5fa;
      color: #000;
    }
    .main-content {
      flex: 1;
      overflow-y: auto;
      padding: 30px;
      background-color: #f1f5f9;
    }
    .section {
      background-color: white;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      padding: 24px;
      margin-bottom: 20px;
    }
    input, select, button {
      width: 100%;
      padding: 12px;
      margin-top: 10px;
      font-size: 16px;
      border: 1px solid #cbd5e1;
      border-radius: 8px;
    }
    button {
      background-color: #1e3a8a;
      color: white;
      font-weight: bold;
      cursor: pointer;
    }
    button:hover {
      background-color: #2563eb;
    }
    h2 {
      color: #1e3a8a;
    }
    canvas {
      margin-top: 20px;
    }
    #alertBox {
      background-color: #fef3c7;
      border: 1px solid #fbbf24;
      padding: 10px;
      border-radius: 8px;
      margin-top: 15px;
      display: none;
    }
    #recommendationBox {
      background-color: #e0f2fe;
      border: 1px solid #0284c7;
      padding: 10px;
      border-radius: 8px;
      margin-top: 15px;
      display: none;
    }
  </style>
</head>
<body>
  <header>üìò Student Budget Companion Dashboard</header>
  <div class="dashboard-container">
    <div class="sidebar">
      <h2>üìä Dashboard</h2>
      <div class="nav-link" onclick="switchSection('budget')">üí∞ Manage Budget</div>
      <div class="nav-link" onclick="switchSection('log')">üìù Log Expense</div>
      <div class="nav-link" onclick="switchSection('analytics')">üìà Analytics</div>
    </div>
    <div class="main-content">
      <div id="budget" class="section">
        <h2>üí∞ Manage Budget</h2>
        <input type="number" id="budgetInput" placeholder="Enter total budget (‚Çπ)" value="5000">
        <select id="incomeSource" onchange="toggleSourceDetails()">
          <option value="Father">Father</option>
          <option value="Mother">Mother</option>
          <option value="Friends">Friends</option>
          <option value="Relatives">Relatives</option>
          <option value="Loan">Loan</option>
          <option value="Scholarship">Scholarship</option>
          <option value="Part-time Job">Part-time Job</option>
          <option value="Savings">Savings</option>
          <option value="Others">Others</option>
        </select>
        <div id="repaymentQuestion" style="display:none; margin-top:10px;">
          <label for="repayment">Do you need to repay this amount?</label>
          <select id="repayment">
            <option value="Yes">Yes</option>
            <option value="No">No</option>
          </select>
        </div>
        <button onclick="setBudgetDetails()">Set Budget</button>
        <p>Total Budget: ‚Çπ<span id="budgetDisplay">0</span></p>
        <p id="budgetNote" style="font-style: italic; margin-top: 10px;"></p>
        <div id="alertBox"></div>
      </div>

      <div id="log" class="section" style="display:none">
        <h2>üìù Log Expense</h2>
        <input type="text" id="desc" placeholder="Expense description" value="Lunch at canteen">
        <input type="number" id="amount" placeholder="Amount (‚Çπ)" value="150">
        <select id="category">
          <option>Food</option>
          <option>Transport</option>
          <option>Utilities</option>
          <option>Entertainment</option>
          <option>Shopping</option>
          <option>Others</option>
        </select>
        <button onclick="logExpense()">Save Expense</button>
        <ul id="expenseList"></ul>
      </div>

      <div id="analytics" class="section" style="display:none">
        <h2>üìà Analytics Dashboard</h2>
        <canvas id="analyticsChart" width="400" height="200"></canvas>
        <div id="recommendationBox"></div>
      </div>
    </div>
  </div>
  <footer>¬© 2025 Student Budget Companion ‚Äì All Rights Reserved.</footer>

  <script>
    let totalBudget = 0;
    let totalSpent = 0;
    let expenses = [
      { desc: "Lunch at canteen", amount: 150, category: "Food" },
      { desc: "Bus fare", amount: 40, category: "Transport" },
      { desc: "Netflix", amount: 199, category: "Entertainment" },
      { desc: "Electricity bill", amount: 300, category: "Utilities" }
    ];

    function switchSection(id) {
      document.querySelectorAll('.section').forEach(sec => sec.style.display = 'none');
      document.getElementById(id).style.display = 'block';
    }

    function toggleSourceDetails() {
      const source = document.getElementById('incomeSource').value;
      const showRepayment = ['Friends', 'Relatives', 'Loan', 'Others'].includes(source);
      document.getElementById('repaymentQuestion').style.display = showRepayment ? 'block' : 'none';
    }

    function setBudgetDetails() {
      const amount = parseFloat(document.getElementById('budgetInput').value);
      const source = document.getElementById('incomeSource').value;
      const repay = document.getElementById('repayment')?.value || "No";
      totalBudget = amount;
      document.getElementById('budgetDisplay').innerText = totalBudget || 0;

      let message = `‚úÖ Budget added from ${source}.`;
      if (repay === "Yes") message += " ‚ö†Ô∏è Please remember to repay this amount.";
      if (source === "Loan") message += " üìå Consider setting aside part of your budget for loan repayment.";

      document.getElementById('budgetNote').innerText = message;
      drawChart();
      showSmartAlert();
    }

    function logExpense() {
      const desc = document.getElementById('desc').value;
      const amount = parseFloat(document.getElementById('amount').value);
      const category = document.getElementById('category').value;
      if (!isNaN(amount) && category && desc) {
        expenses.push({ desc, amount, category });
        totalSpent += amount;
        const li = document.createElement('li');
        li.textContent = `${category} - ‚Çπ${amount} (${desc})`;
        document.getElementById('expenseList').appendChild(li);
        document.getElementById('desc').value = '';
        document.getElementById('amount').value = '';
        drawChart();
        showSmartAlert();
      }
    }

    function drawChart() {
      const ctx = document.getElementById('analyticsChart').getContext('2d');
      const categories = [...new Set(expenses.map(e => e.category))];
      const data = categories.map(cat => expenses.filter(e => e.category === cat).reduce((sum, e) => sum + e.amount, 0));

      if (window.expenseChart) window.expenseChart.destroy();
      window.expenseChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: categories,
          datasets: [{
            label: 'Spending by Category (‚Çπ)',
            data: data,
            backgroundColor: '#1e3a8a'
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: false },
            title: { display: true, text: 'Expenses Overview' }
          }
        }
      });
      showRecommendations();
    }

    function showSmartAlert() {
      const alertBox = document.getElementById('alertBox');
      if (totalBudget === 0) return (alertBox.style.display = 'none');
      const usage = (totalSpent / totalBudget) * 100;
      if (usage >= 80) {
        alertBox.innerText = `‚ö†Ô∏è You've spent ${usage.toFixed(1)}% of your budget! Please review your expenses.`;
        alertBox.style.display = 'block';
      } else {
        alertBox.style.display = 'none';
      }
    }

    function showRecommendations() {
      const box = document.getElementById('recommendationBox');
      const topCategory = expenses.reduce((acc, e) => {
        acc[e.category] = (acc[e.category] || 0) + e.amount;
        return acc;
      }, {});
      const mostSpent = Object.entries(topCategory).sort((a, b) => b[1] - a[1])[0];
      if (!mostSpent) return;
      const tips = {
        Food: "üç± Tip: Cook at home more often to cut down food expenses.",
        Transport: "üöå Tip: Consider walking or cycling for short distances.",
        Entertainment: "üéÆ Tip: Use free entertainment platforms or student discounts.",
        Utilities: "üí° Tip: Turn off unused lights & appliances.",
        Shopping: "üõçÔ∏è Tip: Stick to a shopping list and avoid impulse buys.",
        Others: "üì¶ Tip: Track your miscellaneous expenses more carefully."
      };
      box.innerText = tips[mostSpent[0]] || "üí° Tip: Review your biggest spending area.";
      box.style.display = 'block';
    }

    window.onload = () => {
      drawChart();
      document.getElementById('budgetDisplay').innerText = totalBudget;
    };
  </script>
